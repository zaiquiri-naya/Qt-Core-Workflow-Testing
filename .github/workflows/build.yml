name: Qt Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.0' # Rollback to last release because 6.8 isn't on the repo yet
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        dir: '${{ github.workspace }}'
        setup-python: false

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
        export PATH=$QT_ROOT_DIR/bin:$PATH

    - name: Configure project
      run: cmake -B build -S .

    - name: Build project
      run: cmake --build build --config Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: qt-build-linux
        path: build/

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.0'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2022_64'
        dir: '${{ github.workspace }}'
        setup-python: false

    - name: Set up build environment
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        setx PATH "$GITHUB_WORKSPACE\\Qt\\{version}\\{arch}\\bin;%PATH%"

    - name: Check Path
      run: echo $PATH

    - name: Configure project
      run: cmake -B build -S .

    - name: Build project
      run: cmake --build build --config Release

    - name: Deploy Dependencies
      run: |
        windeploy.exe build\Release\HelloLogger.exe

    - name: Zip Deployed Files
      run: powershell Compress-Archive -Path build\Release\* -DestinationPath build\Release\HelloLogger.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: qt-build-windows
        path: build/

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Linux build artifacts
      uses: actions/download-artifact@v3
      with:
        name: qt-build-linux
        path: build/linux

    - name: Download Windows build artifacts
      uses: actions/download-artifact@v3
      with:
        name: qt-build-windows
        path: build/windows

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Windows Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/windows/Release/HelloLogger.zip
        asset_name: HelloLogger-WindowsZip
        asset_content_type: application/octet-stream
  
